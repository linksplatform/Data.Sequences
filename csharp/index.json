{
  "api/Platform.Data.Sequences.html": {
    "href": "api/Platform.Data.Sequences.html",
    "title": "Namespace Platform.Data.Sequences | LinksPlatform's Platform.Data.Sequences Library",
    "keywords": "Namespace Platform.Data.Sequences Classes SequenceWalker StopableSequenceWalker Interfaces ISequenceAppender<TLinkAddress> Defines the sequence appender. ISequenceWalker<TLinkAddress> Defines the sequence walker."
  },
  "api/Platform.Data.Sequences.ISequenceAppender-1.html": {
    "href": "api/Platform.Data.Sequences.ISequenceAppender-1.html",
    "title": "Interface ISequenceAppender<TLinkAddress> | LinksPlatform's Platform.Data.Sequences Library",
    "keywords": "Interface ISequenceAppender<TLinkAddress> Defines the sequence appender. Namespace : Platform.Data.Sequences Assembly : Platform.Data.Sequences.dll Syntax public interface ISequenceAppender<TLinkAddress> Type Parameters Name Description TLinkAddress Methods | Improve this Doc View Source Append(TLinkAddress, TLinkAddress) Appends the sequence. Declaration TLinkAddress Append(TLinkAddress sequence, TLinkAddress appendant) Parameters Type Name Description TLinkAddress sequence The sequence. TLinkAddress appendant The appendant. Returns Type Description TLinkAddress The link address"
  },
  "api/Platform.Data.Sequences.ISequenceWalker-1.html": {
    "href": "api/Platform.Data.Sequences.ISequenceWalker-1.html",
    "title": "Interface ISequenceWalker<TLinkAddress> | LinksPlatform's Platform.Data.Sequences Library",
    "keywords": "Interface ISequenceWalker<TLinkAddress> Defines the sequence walker. Namespace : Platform.Data.Sequences Assembly : Platform.Data.Sequences.dll Syntax public interface ISequenceWalker<TLinkAddress> Type Parameters Name Description TLinkAddress Methods | Improve this Doc View Source Walk(TLinkAddress) Walks the sequence. Declaration IEnumerable<IList<TLinkAddress>> Walk(TLinkAddress sequence) Parameters Type Name Description TLinkAddress sequence The sequence. Returns Type Description IEnumerable < IList <TLinkAddress>> An enumerable of i list t link address"
  },
  "api/Platform.Data.Sequences.SequenceWalker.html": {
    "href": "api/Platform.Data.Sequences.SequenceWalker.html",
    "title": "Class SequenceWalker | LinksPlatform's Platform.Data.Sequences Library",
    "keywords": "Class SequenceWalker Inheritance Object SequenceWalker Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Sequences Assembly : Platform.Data.Sequences.dll Syntax public static class SequenceWalker Remarks Реализованный внутри алгоритм наглядно показывает, что совершенно не обязательна рекурсивная реализация (с вложенным вызовом функцией самой себя), так как стэк можно использовать намного эффективнее при ручном управлении. Решить объединять ли логику в одну функцию, или оставить 4 отдельных реализации? Решить встраивать ли защиту от зацикливания. Альтернативой защиты от закливания может быть заранее известное ограничение на погружение вглубь. А так же качественное распознавание прохода по циклическому графу. Ограничение на уровень глубины рекурсии может позволить использовать уменьшенный размер стека. Можно использовать глобальный стек (или несколько глобальных стеков на каждый поток). Methods | Improve this Doc View Source WalkLeft<TLinkAddress>(TLinkAddress, Func<TLinkAddress, TLinkAddress>, Func<TLinkAddress, TLinkAddress>, Func<TLinkAddress, Boolean>, Action<TLinkAddress>) Walks the left using the specified sequence. Declaration public static void WalkLeft<TLinkAddress>(TLinkAddress sequence, Func<TLinkAddress, TLinkAddress> getSource, Func<TLinkAddress, TLinkAddress> getTarget, Func<TLinkAddress, bool> isElement, Action<TLinkAddress> visit) Parameters Type Name Description TLinkAddress sequence The sequence. Func <TLinkAddress, TLinkAddress> getSource The get source. Func <TLinkAddress, TLinkAddress> getTarget The get target. Func <TLinkAddress, Boolean > isElement The is element. Action <TLinkAddress> visit The visit. Type Parameters Name Description TLinkAddress The link address. | Improve this Doc View Source WalkRight<TLinkAddress>(TLinkAddress, Func<TLinkAddress, TLinkAddress>, Func<TLinkAddress, TLinkAddress>, Func<TLinkAddress, Boolean>, Action<TLinkAddress>) Walks the right using the specified sequence. Declaration public static void WalkRight<TLinkAddress>(TLinkAddress sequence, Func<TLinkAddress, TLinkAddress> getSource, Func<TLinkAddress, TLinkAddress> getTarget, Func<TLinkAddress, bool> isElement, Action<TLinkAddress> visit) Parameters Type Name Description TLinkAddress sequence The sequence. Func <TLinkAddress, TLinkAddress> getSource The get source. Func <TLinkAddress, TLinkAddress> getTarget The get target. Func <TLinkAddress, Boolean > isElement The is element. Action <TLinkAddress> visit The visit. Type Parameters Name Description TLinkAddress The link address."
  },
  "api/Platform.Data.Sequences.StopableSequenceWalker.html": {
    "href": "api/Platform.Data.Sequences.StopableSequenceWalker.html",
    "title": "Class StopableSequenceWalker | LinksPlatform's Platform.Data.Sequences Library",
    "keywords": "Class StopableSequenceWalker Inheritance Object StopableSequenceWalker Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Sequences Assembly : Platform.Data.Sequences.dll Syntax public static class StopableSequenceWalker Remarks Реализованный внутри алгоритм наглядно показывает, что совершенно не обязательна рекурсивная реализация (с вложенным вызовом функцией самой себя), так как стэк можно использовать намного эффективнее при ручном управлении. Решить объединять ли логику в одну функцию, или оставить 4 отдельных реализации? Решить встраивать ли защиту от зацикливания. Альтернативой защиты от закливания может быть заранее известное ограничение на погружение вглубь. А так же качественное распознавание прохода по циклическому графу. Ограничение на уровень глубины рекурсии может позволить использовать уменьшенный размер стека. Можно использовать глобальный стек (или несколько глобальных стеков на каждый поток). Methods | Improve this Doc View Source WalkLeft<TLinkAddress>(TLinkAddress, Func<TLinkAddress, TLinkAddress>, Func<TLinkAddress, TLinkAddress>, Func<TLinkAddress, Boolean>, Func<TLinkAddress, Boolean>) Determines whether walk left. Declaration public static bool WalkLeft<TLinkAddress>(TLinkAddress sequence, Func<TLinkAddress, TLinkAddress> getSource, Func<TLinkAddress, TLinkAddress> getTarget, Func<TLinkAddress, bool> isElement, Func<TLinkAddress, bool> visit) Parameters Type Name Description TLinkAddress sequence The sequence. Func <TLinkAddress, TLinkAddress> getSource The get source. Func <TLinkAddress, TLinkAddress> getTarget The get target. Func <TLinkAddress, Boolean > isElement The is element. Func <TLinkAddress, Boolean > visit The visit. Returns Type Description Boolean The bool Type Parameters Name Description TLinkAddress The link address. | Improve this Doc View Source WalkRight<TLinkAddress>(TLinkAddress, Func<TLinkAddress, TLinkAddress>, Func<TLinkAddress, TLinkAddress>, Func<TLinkAddress, Boolean>, Action<TLinkAddress>, Action<TLinkAddress>, Func<TLinkAddress, Boolean>, Func<TLinkAddress, Boolean>) Determines whether walk right. Declaration public static bool WalkRight<TLinkAddress>(TLinkAddress sequence, Func<TLinkAddress, TLinkAddress> getSource, Func<TLinkAddress, TLinkAddress> getTarget, Func<TLinkAddress, bool> isElement, Action<TLinkAddress> enter, Action<TLinkAddress> exit, Func<TLinkAddress, bool> canEnter, Func<TLinkAddress, bool> visit) Parameters Type Name Description TLinkAddress sequence The sequence. Func <TLinkAddress, TLinkAddress> getSource The get source. Func <TLinkAddress, TLinkAddress> getTarget The get target. Func <TLinkAddress, Boolean > isElement The is element. Action <TLinkAddress> enter The enter. Action <TLinkAddress> exit The exit. Func <TLinkAddress, Boolean > canEnter The can enter. Func <TLinkAddress, Boolean > visit The visit. Returns Type Description Boolean The bool Type Parameters Name Description TLinkAddress The link address. | Improve this Doc View Source WalkRight<TLinkAddress>(TLinkAddress, Func<TLinkAddress, TLinkAddress>, Func<TLinkAddress, TLinkAddress>, Func<TLinkAddress, Boolean>, Func<TLinkAddress, Boolean>) Determines whether walk right. Declaration public static bool WalkRight<TLinkAddress>(TLinkAddress sequence, Func<TLinkAddress, TLinkAddress> getSource, Func<TLinkAddress, TLinkAddress> getTarget, Func<TLinkAddress, bool> isElement, Func<TLinkAddress, bool> visit) Parameters Type Name Description TLinkAddress sequence The sequence. Func <TLinkAddress, TLinkAddress> getSource The get source. Func <TLinkAddress, TLinkAddress> getTarget The get target. Func <TLinkAddress, Boolean > isElement The is element. Func <TLinkAddress, Boolean > visit The visit. Returns Type Description Boolean The bool Type Parameters Name Description TLinkAddress The link address."
  },
  "README.html": {
    "href": "README.html",
    "title": "Data.Sequences | LinksPlatform's Platform.Data.Sequences Library",
    "keywords": "Data.Sequences LinksPlatform's Platform.Data.Sequences Class Library. Contains abstractions for sequences represented as links. Namespace: Platform.Data.Sequences Forked from: LinksPlatform/Data/Sequences NuGet package: Platform.Data.Sequences Documentation PDF file with code for e-readers."
  }
}